package br.com.sulamerica.vidaweb.fis.route;

import org.apache.camel.Exchange;
import org.apache.camel.LoggingLevel;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.dataformat.JsonLibrary;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Component;

import br.com.sulamerica.vidaweb.fis.engine.RestEngine;
import br.com.sulamerica.vidaweb.fis.model.request.AutenticacaoVOBatch;
import br.com.sulamerica.vidaweb.fis.model.response.SolicitacaoRecebidaResponse;

@Component
public class CargaArquivoMovRoute extends RouteBuilder {

	@Value("${tracking.logger}")
	public String VIDAWEB_TRACKING;

	@Value("${hostname}")
	private String HOST;
	private final String endPoint = "cargaArquivoMov";

	@Override
	public void configure() throws Exception {

		// Declaração da rota para inclusão na fila - cargaArquivoMov
		rest("/vidaweb").post("/cargaArquivoMov").consumes(MediaType.APPLICATION_JSON_VALUE)
				.produces(MediaType.APPLICATION_JSON_VALUE).type(AutenticacaoVOBatch.class)
				.outType(SolicitacaoRecebidaResponse.class).to("direct:cargaArquivoMovToQueue");

		// Ação da rota para inclusão na fila - cargaArquivoMov
		from("direct:cargaArquivoMovToQueue") // rota para incluir na fila
				.routeId("cargaArquivoMovToQueue").doTry().marshal().json(JsonLibrary.Gson, true)
				.log(LoggingLevel.INFO, VIDAWEB_TRACKING, "BODY PARA O AMQ: ${body}")
				.to("activemq:queue:cargaArquivoMovqueue?exchangePattern=InOnly") // envia para a fila
				.bean(RestEngine.class, "response('Recebido com sucesso')")
				.log(LoggingLevel.DEBUG, VIDAWEB_TRACKING, "BODY RESPONSE: ${body}").doCatch(Exception.class)
				.bean(RestEngine.class, "response('Erro ao enviar')");

		// controla o erro na rota - cargaArquivoMov
		from("activemq:queue:cargaArquivoMovqueue?transacted=true")
				.errorHandler(deadLetterChannel("seda:cargaArquivoMovDLQ").maximumRedeliveries(3).redeliveryDelay(1000)
						.useOriginalMessage()) // error handler: faz 3 tentativas para a entrega da mensagem
				.setHeader("Content-Type", constant("application/json"))
				.setHeader("Accept", constant("application/json")).setHeader(Exchange.HTTP_METHOD, constant("POST"))
				.setBody(simple("${body}")).to("http:" + HOST + endPoint + "?bridgeEndpoint=true");

		// gravando na fila DLQ - cargaArquivoMovDLQ
		from("seda:cargaArquivoMovDLQ").id("send-cargaArquivoMovqueueDLQ")
				.log(LoggingLevel.ERROR, VIDAWEB_TRACKING, "MENSAGEM GRAVADA NA DLQ cargaArquivoMov.DLQ\n${body}\n")
				.multicast().parallelProcessing().to("activemq:queue:cargaArquivoMovqueue.DLQ")// enviando para fila
		;
	}

}
